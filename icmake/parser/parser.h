// Generated by Bisonc++ V4.00.00 on Fri, 20 Apr 2012 13:55:15 +0200

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "parserbase.h"
// $insert scanner.h
#include "../scanner/scanner.h"

class Options;

#undef Parser
class Parser: public ParserBase
{
    Options &d_options;

    // $insert scannerobject
    Scanner d_scanner;
    bool d_tokens;
        
    public:
        Parser();
        int parse();
        void preProcess();
        bool ok() const;
        void writeFiles();

    private:
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc

    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
};

inline bool Parser::ok() const
{
    return d_nErrors__ == 0;
}

#endif
