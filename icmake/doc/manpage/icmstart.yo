includefile(release.yo)

htmlbodyopt(text)(#27408B)
htmlbodyopt(bgcolor)(#FFFAF0)
whenhtml(mailto(Frank B. Brokken: f.b.brokken@rug.nl))

DEFINEMACRO(sop)(3)(\
    it() bf(-ARG1) ARG2 nl()ARG3\
)

DEFINEMACRO(itt)(1)(\
    it()tt(ARG1)\
)

DEFINEMACRO(itb)(1)(\
    it()bf(ARG1)\
)

DELETEMACRO(tt)
DEFINEMACRO(tt)(1)(em(ARG1))

COMMENT( man-request, section, date, distribution file, general name)
manpage(icmstart)(1)(_CurYrs_)(icmake._CurVers_.tar.gz)
        (starts icmbuild program maintenance)

COMMENT( man-request, larger title )
manpagename(icmstart)(A startup script for icmbuild program maintenance)

COMMENT( all other: add after () )
manpagesynopsis()
       bf(icmstart) tt([Options]) top-dir [program|library]

manpagedescription()

The bf(icmstart) script is a generic script that can be used to start program
maintenance using bf(icmake)(1) and bf(icmbuild)(1). bf(Icmstart) will create
an initial directory tt(top-dir) and will install the files tt(CLASSES,
VERSION) and tt(icmconf) below tt(top-dir). If provided, tt(program) or
tt(library) may be specified as the default mode of operation of the
bf(icmbuild)(1) script. Skeleton files for the main directory and
subdirectories, by default listed in the file
tt(/usr/share/icmake/icmstart.rc), may be installed as well (see below at
bf(SKELETON FILES)).

After changing to the top-level directory created by bf(icmstart) the
bf(icmbuild) script may be called for program maintenance.

manpageoptions()

    bf(Icmstart) may be called with the following options, which (if specified)
    must be the first arguments to bf(icmstart):
    itemization(
    itt(-d)nl()
       Do not execute any commands, but show the commands that would have been
        executed on the standard output.
    itt(-I)nl()
       Do not install skeleton files. 
    itt(-r) 
       Unconditionally replace existing (skeleton) files. If tt(-r) is not
        provided bf(icmstart) will ask the user to confirm that an existing
        file must
        be overwritten. If a skeleton specification refers to a directory, the
        full directory and its subdirectories will be replaced.
    itt(-s skeleton-path) nl() 
       By default skeleton files are listed in the skeleton resource file
        tt(/usr/share/icmake/icmstart.rc). Alternatively, the skeleton
        resource file may be specified by the tt(ICM) environment variable,
        which -in turn- may be overruled by the path specified with the tt(-s)
        option. The skeleton path may be specified as a full file-path or as a
        directory, in which case the skeleton resource file is assumed to be
        tt(icmstart.rc) (see below at bf(SKELETON FILES)).
    )
    Since bf(icmstart) uses tt(tar) to install files, tt(tar) must be
available when bf(icmstart) should install skeleton files.

manpagesection(SKELETON FILES)

Skeleton resource files may contain comment (empty lines and lines beginning
with the hash-mark (tt(#))) which is ignored, and should otherwise contain
absolute or relative (with respect to the directory containing the skeleton
resource file) file- or directory names. 

These entries are copied to the top-level directory using bf(tar)(1). During
this process bf(tar)(1) will remove leading tt(/) and tt(../) specifications
from specified file- and directory names.  E.g., if a skeleton name
tt(/tmp/scanner/scanner.h) is listed, and the top-level directory is named
tt(demo) then tt(demo/tmp/scanner/scanner.h) is installed.

Skeleton specifications may be specified on separate lines, or lines may
contain  multiple specifications. The first entry on a line may be a question
mark, in which case the user is asked to confirm that the skeletons specified
on that line must be installed. Confirmation is requested for each subsequent
element on a line. Once installation is not confirmed all remaining entries on
that line are skipped.

For example, the default tt(icmstart.rc) may contain the following lines:
    verb(
main.cc
main.ih
usage.cc
version.cc
? scanner parser
    )
    In this case, tt(main.cc, main.ih, usage.cc) and tt(version.cc) will be
installed, but confirmation is requested for the tt(scanner) directory. If
installation is confirmed, the tt(scanner) directory and its contents are
installed into the top-level directory. Next, confirmation is requested to
install tt(parser). If installation of tt(scanner) is not confirmed,
installation of tt(parser) is skipped.

    Installation of a directory does not imply that the file tt(CLASSES) will
contain that directory as one of its entries. It is the user's responsibility
to update tt(CLASSES), if necessary.

    The file tt(VERSION) is used to make available the program's version
number, release-years and author name(s). The tt(VERSION) file contains lines
comparable to
        verbinclude(../../usr/share/icmake/VERSION)
and the values defined here will be used in the tt(version.cc) skeleton file.

manpagefiles()
    The mentioned paths are sugestive only and may be installation dependent:
    itemization(
    it() bf(/usr/share/icmake/icmconf)
        Example of a bf(icmstart) configuration file;
    it() bf(/usr/share/icmake/CLASSES)
        Example of a bf(icmstart) tt(CLASSES) file.
    it() bf(/usr/share/icmake/icmstart.rc)
        Default skeleton resource file.
    )

manpageseealso()
    bf(icmake)(1), bf(icmbuild)(1), bf(tar)(1)

manpagebugs()
    None reported

includefile(trailer.inc)
