includefile(release.yo)

htmlbodyopt(text)(#27408B)
htmlbodyopt(bgcolor)(#FFFAF0)
whenhtml(mailto(Frank B. Brokken: f.b.brokken@rug.nl))

DEFINEMACRO(sop)(3)(\
    it() bf(-ARG1) ARG2 nl()ARG3\
)

DEFINEMACRO(itt)(1)(\
    it()tt(ARG1)\
)

DEFINEMACRO(itb)(1)(\
    it()bf(ARG1)\
)

DELETEMACRO(tt)
DEFINEMACRO(tt)(1)(em(ARG1))

COMMENT( man-request, section, date, distribution file, general name)
manpage(icmconf)(7)(_CurYrs_)(icmake._CurVers_.tar.gz)
        (configuration file for bf(icmbuild)(1))

COMMENT( man-request, larger title )
manpagename(icmconf)(Configuration file for the bf(icmbuild)(1) 
                    program maintenance script)

manpagedescription()

The bf(icmconf) configuration file is used to specify and tailor the
characteristics of program maintenance performed by the bf(icmbuild)(1) icmake
script. It can be used to activate and specify various parameters that
determine how the program or library maintenance will proceed. 

The parameters are biased towards the construction of a bf(C++) program, but
program maintenance for other languages (e.g., bf(C)) can easily be realized
as well. 

manpagesection(PROGRAM AND SOURCE CONFIGURATION)

    itemization(
    itb(#define MAIN "main.cc")
       The specification of the file defining the tt(int main) function. This
        specification may be left as-is if bf(icmbuild)(1) is used for library
        maintenance rather than program maintenance.

    itb(#define BINARY "binary") 
       The name of the binary program. Can be left as-is if the intent is to
        construct a library rather than a program. Don't specify a path
        here. The installation path can be specified at the tt(BIN_INSTALL)
        parameter (see below)

    itb(#define REFRESH)
       By defining tt(REFRESH) the binary program is always relinked, even
        when no sources were modified. This can be useful if, e.g., a separate
        library was rebuilt against which the program must be linked. By
        default tt(REFRESH) is em(not) defined.

    itb(#define BIN_INSTALL         "/usr/local/bin")
       This parameter specifies the location where tt(icmbuild install) will
        install the binary program.
    )


manpagesection(LIBRARY CONSTRUCTION)

    itemization(
    itb(#define LIBRARY           "modules")
       By default this parameter is not defined. If defined a local library is
        defined. When a binary program is built it will be linked against the
        library rather than the individual object modules. Change the
        library's name at your own digression. Don't use tt(lib) or an
        extension like tt(.a).

    itb(#define SHARED)
       This parameter is only interpreted if tt(LIBRARY) was also specified.
        If tt(SHARED) is defined a static library (extension tt(.a)) as well
        as a shared library (extension tt(.so)) is built. If not specified
        only the static library is built. By default tt(SHARED) is not
        defined.

    itb(#define SHAREDREQ           "")
       When creating a shared library:
       Specify the names of any libraries and library paths that are required
        by the shared library between the double quotes. E.g., if a library is
        found in tt(/usr/lib/special) use tt("-L/usr/lib/special -lspecial")
        assuming that the name of the required library is tt(libspecial.so).
        The tt(/lib) and tt(/usr/lib) paths are usually predefined and need
        not be specified. This parameter is only interpreted if tt(SHARED) and
        tt(LIBRARY) were also defined.

    itb(#define LIB_INSTALL         "/usr/local/lib")
       This parameter specifies the location where tt(icmbuild install) will
        install the library (libraries). By default it is not specified. It
        should only be specified if tt(LIBRARY) was also specified.
    )

manpagesection(COMPILATION AND LINKING)

    itemization(
    itb(#define CLS)
       The em(clear screen) parameter. If defined tt(tput clear) is called to
        clear the terminal screen before starting the compilation. By default
        it is not defined.



manpagefiles()
    The mentioned paths are sugestive only and may be installation dependent:
    itemization(
    it() bf(/usr/share/icmake/CLASSES)
        Example of a bf(icmconf) tt(CLASSES) file.
    it() bf(/usr/share/icmake/icmconf)
        Example and default skeleton resource file.
    )

manpageseealso()
    bf(icmake)(1), bf(icmbuild)(1), bf(icmstart)(1), bf(icmstart.rc)(7).

manpagebugs()
    None reported

includefile(trailer.inc)
