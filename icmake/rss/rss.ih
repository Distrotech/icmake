#ifndef _GNU_SOURCE
#define _GNU_SOURCE
#endif

#include <stdio.h>
#include <ctype.h>
#include <stdarg.h>
#include <string.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <glob.h>
#include <errno.h>
#include <stdlib.h>
#include <unistd.h>

#ifdef SUN
#include <memory.h>
#endif

#include "typedefs.h"
#include "str.h"
#include "general.h"
#include "spawn.h"
#include "file.h"

size_t atox(char const *string, int *n);
                                            /* first entry matching pattern */
char *findfirst(char const *fspec, size_t attrib);  
char *findnext(void);                       /* remaining matching entries   */

char *filefound(void);                      /* test attrib/pattern  */

size_t icm_findfirst(char const *fspec, size_t attrib, find_t_ *fileinfo);
size_t icm_findnext(find_t_ * fileinfo);
int chesc(char *string, int *n);

char *fgetz (char *, size_t, FILE *);
//char     *getstring (FILE *, INT32, size_t);
//
//char     *hexstring (size_t, size_t);
//
//char     *stresc(char *);
//

//INT16    getint16 (FILE *);
//
//OPCODE_  getopcode (FILE *);
//
//UNS16    getvar(FILE *, BIN_HEADER_ *, VAR_ **);
//
void initvar(VAR_ *v);

void split(char const *path);
void join(void);


extern ICMAKE_FIND_ gr_ifs;                /* in: ./rss/findnext.c */
char gr_name[MAX_PATH_];                /* returned by the get_ functions */
char gr_dir[MAX_PATH_];
char gr_fname[MAX_PATH_];
char gr_ext[MAX_PATH_];

extern char *gr_beyond_optchar;
extern char *gr_optval;

extern int gr_next_option;
