#!/usr/bin/icmake -qt/tmp/icmstart

    // Change this into the location of the directory containing icmbuild's 
    // CLASSES and icmconf files:
#define CONFIG    "/usr/lib/icmake"

    // Location of the frame files.
#define SKEL  "/etc/icmake"

//                      NO CONFIGURABLE PARTS BELOW THIS LINE

string g_skel;
string g_program;

void usage()
{
    printf("Usage: ", g_program, " [-f] [-s skeldir]  dir+\n"
      "Where:\n"
      "         -f: do NOT install the skeleton files, if any.\n"
      " -s skeldir: Read the skeleton information from the directory "
                                                             "`skeldir'\n"
      "             (by default the skeleton files are located in "
                                                             "/etc/icmake)\n"
      "       dir+: one or more directory names. The first name will be the\n"
      "             directory containing icmbuild's CLASSES and icmconf\n"
      "             files as well as all remaining arguments and "
                                                             "subdirectories\n"
      "             The additional subdirectories are already added to "
                                                              "CLASSES\n"
      "\n");

    exit(1);
}

void die(string s)
{
    printf(g_program, ": ", s, "\n");
    exit(1);
}

void installFrame(string frameFile)
{
    string file;
    string path;
    list fields;

    fields = strtok(frameFile, " \t\n");
    if (sizeof(fields) == 0)
        return;

    file = fields[0];
    if (file[0] == "#")
        return;

    path = get_path(file);

    if (!strlen(path))
        path = ".";
    else if (!exists(path))
        return;

    if (exists(file))
        printf("Not installing already existing file `", file, "'\n");
    else
        system("cp ../" + g_skel + "/" + file + " " + path);
}

void main(int argc, list argv)
{
    string arg;
    int idx;
    int frames = 1;
    int firstdir = 1;
    list skeletons;

    g_program = get_base(argv[0]);

    if (argc == 1)
        usage();

    g_skel = SKEL;
    while (firstdir < argc)
    {
        arg = argv[firstdir];

        if (arg[0] != "-")
            break;

        if (arg[1] == "f")
            frames = 0;
        else if (arg[1] == "s")
        {
            g_skel = substr(arg, 2, 999);

            if (g_skel == "")
            {
                if (firstdir == argc)
                    die("-s lacks skeleton dir specification");

                g_skel = argv[++firstdir];
            }
        }
        ++firstdir;
    }

    if (exists(argv[firstdir]))
        die("`" + argv[firstdir] + "' is in the way. Remove it first");
    
    system("mkdir " + argv[firstdir]);
    chdir(argv[firstdir]);

    system("cp "  CONFIG  "/CLASSES "  CONFIG  "/icmconf .");
    for (idx = firstdir + 1; idx < argc; ++idx)
    {
        if (system(P_NOCHECK, "mkdir " + argv[idx]) != 0)
        {
            printf("Can't create `", argv[idx], 
                    "': commented out in CLASSES\n");
            fprintf("CLASSES", "# ");
        }
        fprintf("CLASSES", argv[idx], "\n");
    }

    if (!frames)
        exit(0);

    if (!exists("../" + g_skel + "/skel"))
        die("Missing skeleton specification file `" + g_skel + "/skel'");
                
    skeletons = `"cat ../" + g_skel + "/skel"`;

    for (idx = sizeof(skeletons); idx--; )
        installFrame(skeletons[idx]);

    exit(0);
}
