#!/usr/bin/icmake -qt/tmp/icmstart

    // Change this into the location of the directory containing icmbuild's 
    // CLASSES and icmconf files:
#define BASE    "/usr/lib/icmake"

    // Location of the frame files.
#define CONFIG  "/etc/icmake"

//                      NO CONFIGURABLE PARTS BELOW THIS LINE

void usage(string progname)
{
    printf("Usage: ", get_base(progname), " [-f] dir+\n"
        "Where:\n"
        "      -f: do NOT install the frame files, if any.\n"
        "          Normally the frame files are located in /etc/icmake\n"
        "    dir+: one or more directory names. The first name will be the\n"
        "          directory containing icmbuild's CLASSES and icmconf files\n"
        "          as well as all remaining arguments as subdirectories.\n"
        "          The additional subdirectories are already added to "
                                                                "CLASSES\n"
        "\n");

    exit(1);
}

void installFrame(string frameFile)
{
    string file;
    string path;
    list fields;

    fields = strtok(frameFile, " \t\n");
    if (sizeof(fields) == 0)
        return;

    file = fields[0];
    if (file[0] == "#")
        return;

    path = get_path(file);

    if (!strlen(path))
        path = ".";
    else if (!exists(path))
        return;

    if (exists(file))
        printf("Not installing already existing file `", file, "'\n");
    else
        system("cp " CONFIG "/" + file + " " + path);
}

void main(int argc, list argv)
{
    int idx;
    list frames;
    int firstdir = 1;

    if (argc > 1 && argv[1] == "-f")
        ++firstdir;

    if (argc == firstdir)
        usage(argv[0]);

    if (exists(argv[firstdir]))
    {
        printf("`", argv[firstdir], "' is in the way. Remove it first\n");
        exit(1);
    }
    
    system("mkdir " + argv[firstdir]);
    chdir(argv[firstdir]);

    system("cp "  BASE  "/CLASSES "  BASE  "/icmconf .");
    for (idx = firstdir + 1; idx < argc; ++idx)
    {
        if (system(P_NOCHECK, "mkdir " + argv[idx]) != 0)
        {
            printf("Can't create `", argv[idx], 
                    "': commented out in CLASSES\n");
            fprintf("CLASSES", "# ");
        }
        fprintf("CLASSES", argv[idx], "\n");
    }

    frames = `"cat " CONFIG "/frames"`;

    for (idx = sizeof(frames); idx--; )
        installFrame(frames[idx]);

    exit(0);
}
