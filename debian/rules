#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# This file is public domain software, originally written by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

include /usr/share/dpatch/dpatch.make

build: build-stamp
build-stamp: # FBB: Removed it. I have no patches: patch-stamp
	dh_testdir

	# Add here commands to compile the package.
	sh bootstrap.sh

	touch build-stamp

clean: myclean unpatch
myclean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Add here commands to clean up after the build process.
	rm -f bin/* */*.[ao]

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Add here commands to install the package into debian/<packagename>
	dh_install bin/icmbuild bin/icmstart    /usr/bin
	dh_install usr/share/icmake             /usr/share

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs CHANGES
	dh_installdocs doc/README.icmbuild doc/icmake.doc doc/icmake.ps \
				   debian/mail.frank templates
	dh_installexamples
	dh_installman doc/icmake.1 doc/icmbuild.1 doc/icmstart.1
	dh_link usr/share/man/man1/icmake.1 usr/share/man/man1/icmun.1
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# The following is for internal development usage only
# Update that sum when new _upstream_ releases occur, this
# catches silent file content forges at the upstream server side
# Archive downloaded from https://www.icce.rug.nl/debian/icmake
#	file: icmake_x.y.z.tar.gz
MD5TRUSTED := dd19af23e36ebcacf369ca5c95715dc7

DEBVERSION:=$(shell head -n 1 debian/changelog | sed -e 's/^[^(]*(\([^)]*\)).*/\1/')
UPVERSION:=$(shell echo $(DEBVERSION) | sed -e 's/^.*://' -e 's/-[0-9.]*$$//' -e 's/.dfsg$$//')
UPNAME := icmake
UPFILE := $(UPNAME)_$(UPVERSION).tar.gz
DEFILE := $(UPNAME)_$(UPVERSION).orig.tar.gz
URL    := https://www.icce.rug.nl/debian/icmake
MD5CURRENT := `md5sum ../tarballs/$(DEFILE) | sed -e 's/ .*//'`
SVNTRUNK   := https://svn.sourceforge.net/svnroot/bisoncpp/trunk/icmake

get-orig-source:
	@@dh_testdir
	@@[ -d ../tarballs/. ]||mkdir -p ../tarballs

	-@if [ ! -f ../tarballs/$(DEFILE) ] ; then \
		echo "Downloading $(URL)/$(UPFILE) from $(URL)/$(UPFILE) ..." ; \
		wget --no-check-certificate --quiet -N -nv -T10 -t3 -O \
             ../tarballs/$(DEFILE) $(URL)/$(UPFILE) ; \
	else \
		echo "Upstream source tarball have been already downloaded" ; \
	fi

	-@if [ "$(MD5CURRENT)" != "$(MD5TRUSTED)" ] ; then \
		echo "Expecting upstream filename md5sum $(MD5TRUSTED), but $(MD5CURRENT) found" ; \
		echo "Upstream filename md5sum is NOT trusted! Possible upstream filename forge!" ; \
		false ; \
	else \
		echo "Upstream filename md5sum is trusted!" ; \
	fi


get-svn-trunk:
	@@dh_testdir
	@@[ -d ../tarballs/. ]||mkdir -p ../tarballs
	rm -rf ../tarballs/$(DEFILE) ../tarballs/icmake-svn-trunk
	svn --force export $(SVNTRUNK) ../tarballs/icmake-svn-trunk
	@@if [ -d ../tarballs/icmake-svn-trunk/debian ] ; then rm -rf ../tarballs/icmake-svn-trunk/debian; fi
	@@ echo Building the SVN TRUNK tarball in ../tarballs/$(DEFILE)
	@@GZIP=-9 tar -b1 -czf ../tarballs/$(DEFILE) -C ../tarballs icmake-svn-trunk
	rm -rf ../tarballs/icmake-svn-trunk


print-version:
	@@echo "Debian version:          $(DEBVERSION)"
	@@echo "Upstream version:        $(UPVERSION)"

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install patch unpatch myclean
